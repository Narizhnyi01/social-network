{"version":3,"sources":["../node_modules/react-router-dom/es/warnAboutDeprecatedESMImport.js","../node_modules/react-router-dom/es/Redirect.js","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/posts.module.css","components/Profile/MyPosts/Post/post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Redirect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","className","style","banner_image","body_post","src","photos","large","alt","fullName","aboutMe","lookingForAJobDescription","Preloader","Post","s","item","message","like","MyPosts","memo","console","log","postsElement","posts","map","post","key","id","createRef","AddPostFormRedux","onSubmit","values","onAddPost","newPost","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.215bc3a7.chunk.js","sourcesContent":["\"use strict\";\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  printWarning = function(format, subs) {\n    var index = 0;\n    var message =\n      \"Warning: \" +\n      (subs.length > 0\n        ? format.replace(/%s/g, function() {\n            return subs[index++];\n          })\n        : format);\n\n    if (typeof console !== \"undefined\") {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React Router ---\n      // This error was thrown as a convenience so that you can use the\n      // stack trace to find the callsite that triggered this warning.\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\nexport default function(member) {\n  printWarning(\n    'Please use `import { %s } from \"react-router-dom\"` instead of `import %s from \"react-router-dom/es/%s\"`. ' +\n      \"Support for the latter will be removed in the next major release.\",\n    [member, member]\n  );\n}\n","\"use strict\";\n\nimport warnAboutDeprecatedESMImport from \"./warnAboutDeprecatedESMImport.js\";\nwarnAboutDeprecatedESMImport(\"Redirect\");\n\nimport { Redirect } from \"../esm/react-router-dom.js\";\nexport default Redirect;\n","import React from 'react';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) =>{\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3h0ow\",\"top_cont\":\"ProfileInfo_top_cont__23mri\",\"banner_image\":\"ProfileInfo_banner_image__BJjpn\",\"body_post\":\"ProfileInfo_body_post__2Uaux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__1Cl-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__37YMH\",\"active\":\"post_active__H2Rth\"};","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n                editMode: true\r\n            } )\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                { !this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '---------'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode]  = useState(false);\r\n    let [status, setStatus]  = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect ( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    return (\r\n        <>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onBlur={ deactivateEditMode } autoFocus={true} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloadrer/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\tif(!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t<div>\r\n\t\t<div className={style.banner_image}>\r\n\t\t\t{/*<img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500' alt=''/>*/}\r\n\t\t</div>\r\n\t\t<div className={style.body_post}>\r\n\t\t\t<img src={props.profile.photos.large} alt=\"\"/>\r\n\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t<div>Меня зовут: {props.profile.fullName}</div>\r\n\t\t\t<div>Немного обо мне: {props.profile.aboutMe}</div>\r\n\t\t\t<div>поиск работы: {props.profile.lookingForAJobDescription}</div>\r\n\t\t\t<div>ava + descr</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"ava\" />\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"text\">{props.message}</div>\r\n\t\t\t\t<span>like {props.like}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tconsole.log(322223)\r\n\tlet postsElement =\r\n\t\t[...props.posts]\r\n\t\t\t// .reverse()\r\n\t\t\t.map( post => <Post like={post.like} key={post.id} message={post.message}/> );\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet addNewPost = (values) => {\r\n\t\tprops.onAddPost(values.newPost);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.posts}>\r\n\t\t\t<div>my posts</div>\r\n\t\t\t<AddPostFormRedux onSubmit={addNewPost}/>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst PostSend = (props) =>{\r\n\treturn (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPost'} placeholder={'enter your post'} validate={[required, maxLength10]}/>\r\n            <button >Send</button>\r\n        </form>\r\n\t);\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'dialogAddPostForm'}) (PostSend);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        onAddPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n\r\n        this.props.getStatus(userId);\r\n\r\n\r\n\r\n    }\r\n    render(){\r\n        return (\r\n           <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n\r\n    withRouter\r\n\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps, {getProfile}) (WithUrlDataContainerComponent);"],"sourceRoot":""}